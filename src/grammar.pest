WS = _{ " " | "\t" | NL }
NL = _{ "\n" | "\r\n" }

procedure_identifier =  { identifier }
interface_identifier =  { identifier }
identifier           = @{ (ASCII_ALPHA_LOWER) ~ (ASCII_ALPHANUMERIC | "_")* }

argument_list =  { literal ~ (WS* ~ "," ~ WS* ~ literal)* }
expression    =  { literal }
literal       = _{ string | number | boolean | null }
string        = @{ "\"" ~ (string_char)* ~ "\"" }
string_char   = _{ "\\\"" | !"\"" ~ ANY }
number        = @{ "-"? ~ (ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* | "." ~ ASCII_DIGIT+ | ASCII_DIGIT+) }
boolean       =  { "true" | "false" }
null          =  { "null" }

src            = { WS* ~ program ~ WS* ~ EOI }
program        = { "program" ~ WS* ~ do_block }
do_block       = { "do" ~ WS* ~ statement* ~ WS* ~ "end" }
statement      = { procedure_call | return }
procedure_call = { (interface_identifier ~ ":")? ~ procedure_identifier ~ "(" ~ WS* ~ argument_list? ~ WS* ~ ")" }
return         = { "return " ~ expression }
